name: build

on:
  push:
    branches:
      - "**"
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      archive_name: ${{ steps.pkgmeta.outputs.archive_name }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '24.x'
          cache: 'npm'
      - id: pkgmeta
        run: |
          PKG_NAME=$(node -p "require('./package.json').name")
          PKG_VERSION=$(node -p "require('./package.json').version")
          BASENAME=$(echo "$PKG_NAME" | sed -e 's/^@//' -e 's/\//-/g')
          ARCHIVE_NAME="${BASENAME}-${PKG_VERSION}.tgz"
          echo "archive_name=$ARCHIVE_NAME" >> "$GITHUB_OUTPUT"
          echo "ARCHIVE_NAME=$ARCHIVE_NAME"  >> "$GITHUB_ENV"
      - run: npm ci
      - run: npm run build
      - run: npm run lint
      - run: npm test
      - name: archive dist
        if: startsWith(github.ref, 'refs/tags/v')
        run: tar -czf "$ARCHIVE_NAME" dist
      - name: upload artifact
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: release-asset
          path: ${{ env.ARCHIVE_NAME }}
          retention-days: 7
          if-no-files-found: error
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - name: Check if tag is semver
        run: |
          if [[ ! "${GITHUB_REF_NAME}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Tag ${GITHUB_REF_NAME} is not semver. Skipping release."
            exit 1
          fi
      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          name: release-asset
          path: .
      - name: create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
          files: ${{ needs.build.outputs.archive_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
